{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pedroisac/Documentos/GitHub/portfolio/frontend/simple-blog/pages/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getPostBySlug, getAllPosts } from \"../lib/api\";\nimport { useRouter } from \"next/router\";\nimport markdownToHtml from \"../lib/markdownToHtml\";\nimport Footer from \"../components/Footer\";\nexport default function Post({\n  post,\n  preview\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      style: {\n        backgroundImage: `url(${post.coverImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => router.push(\"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content-continer\",\n      dangerouslySetInnerHTML: {\n        __html: post.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, [\"title\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await markdownToHtml(post.content || \"\");\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/pedroisac/Documentos/GitHub/portfolio/frontend/simple-blog/pages/[slug].js"],"names":["getPostBySlug","getAllPosts","useRouter","markdownToHtml","Footer","Post","post","preview","router","backgroundImage","coverImage","title","push","__html","content","getStaticProps","params","slug","props","getStaticPaths","posts","paths","map","fallback"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAiC;AAC9C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,KAAK,EAAE;AAAEO,QAAAA,eAAe,EAAG,OAAMH,IAAI,CAACI,UAAW;AAA1C,OAFT;AAAA,8BAIE;AAAA,kBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,OAAO,EAAE,MAAMH,MAAM,CAACI,IAAP,CAAY,GAAZ;AAArB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAf;AAF3B;AAAA;AAAA;AAAA;AAAA,YARF,eAYE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMV,IAAI,GAAGN,aAAa,CAACgB,MAAM,CAACC,IAAR,EAAc,CACtC,OADsC,EAEtC,MAFsC,EAGtC,MAHsC,EAItC,QAJsC,EAKtC,SALsC,EAMtC,SANsC,EAOtC,YAPsC,CAAd,CAA1B;AASA,QAAMH,OAAO,GAAG,MAAMX,cAAc,CAACG,IAAI,CAACQ,OAAL,IAAgB,EAAjB,CAApC;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,kCACCA,IADD;AAEFQ,QAAAA;AAFE;AADC;AADF,GAAP;AAQD;AAED,OAAO,eAAeK,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGnB,WAAW,CAAC,CAAC,MAAD,CAAD,CAAzB;AAEA,SAAO;AACLoB,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWhB,IAAD,IAAU;AACzB,aAAO;AACLU,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEX,IAAI,CAACW;AADL;AADH,OAAP;AAKD,KANM,CADF;AAQLM,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD","sourcesContent":["import { getPostBySlug, getAllPosts } from \"../lib/api\";\nimport { useRouter } from \"next/router\";\nimport markdownToHtml from \"../lib/markdownToHtml\";\nimport Footer from \"../components/Footer\";\n\nexport default function Post({ post, preview }) {\n  const router = useRouter();\n  return (\n    <div className=\"post-container\">\n      <div\n        className=\"banner-container\"\n        style={{ backgroundImage: `url(${post.coverImage})` }}\n      >\n        <h1>{post.title}</h1>\n        <span onClick={() => router.push(\"/\")}></span>\n      </div>\n      <div\n        className=\"post-content-continer\"\n        dangerouslySetInnerHTML={{ __html: post.content }}\n      ></div>\n      <Footer />\n    </div>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  const post = getPostBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ]);\n  const content = await markdownToHtml(post.content || \"\");\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}